"""
1. Каждое из слов «разработка», «сокет», «декоратор» представить
в строковом формате и проверить тип и содержание соответствующих переменных.
Затем с помощью онлайн-конвертера преобразовать строковые представление
в набор кодовых точек Unicode и также проверить тип и содержимое переменных.

Подсказки:
--- 'разработка' - строковый формат
--- '\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430' - набор кодовых точек
--- используйте списки и циклы, не дублируйте функции
"""

VAR_1 = 'разработка'
VAR_2 = 'сокет'
VAR_3 = 'декоратор'

STR_LIST = [VAR_1, VAR_2, VAR_3]

for el in STR_LIST:
    print(type(el))
    print(el)

print()

VAR_UNIC_1 = '\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430'
VAR_UNIC_2 = '\u0441\u043e\u043a\u0435\u0442'
VAR_UNIC_3 = '\u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440'

UNIC_LIST = [VAR_UNIC_1, VAR_UNIC_2, VAR_UNIC_3]

for el in UNIC_LIST:
    print(type(el))
    print(el)

"""
Среди этих кодировок стоит упомянуть ещё одну, зачастую весьма полезную. 
Это "unicode-escape". Если вы декодировали str и хотите быстро получить 
представление содержащихся в ней экранированных литералов Юникода, 
можно определить эту кодировку в .encode:

for word in WORDS:
    print(f"'{word}' - буквенный формат - {type(word)}")
    print(f"{word.encode('unicode_escape').decode('utf-8')} - набор кодовых точек - {type(word)}")
"""